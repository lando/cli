name: PR Release Tests

on:
  pull_request:

jobs:
  package:
    runs-on: ubuntu-22.04
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
          - arm64
        node-version:
          - '18'
        os:
          - linux
          - macos
          - win
        pkg-version:
          - '5.8.1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Install Yarn dependencies
        run: yarn install --prefer-offline --frozen-lockfile --production
      - name: Prepare Release
        uses: lando/prepare-release-action@v2
        with:
          version: dev
          sync: false
      - name: Ensure version
        run: node ./bin/lando version
      - name: Package into node binary
        uses: lando/pkg-action@v3
        id: pkg-action
        with:
          entrypoint: bin/lando.js
          arch: ${{ matrix.arch }}
          node-version: ${{ matrix.node-version }}
          os: ${{ matrix.os }}
          pkg: ${{ matrix.pkg-version }}

  sign-n-deploy:
    runs-on: ${{ matrix.os }}
    needs:
      - package
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            key: cli-node18-win-x64-${{ github.sha }}
            file: lando/cli.exe
            certificate-data: WINDOZE_CERT_DATA
            certificate-password: WINDOZE_CERT_PASSWORD
            result: lando-win-x64-snapshot-${{ github.sha }}.exe
          - os: windows-2022
            key: cli-node18-win-arm64-${{ github.sha }}
            file: lando/cli.exe
            certificate-data: WINDOZE_CERT_DATA
            certificate-password: WINDOZE_CERT_PASSWORD
            result: lando-win-arm64-snapshot-${{ github.sha }}.exe
          - os: macos-12
            key: cli-node18-macos-x64-${{ github.sha }}
            file: lando/cli
            certificate-data: APPLE_CERT_DATA
            certificate-password: APPLE_CERT_PASSWORD
            apple-product-id: dev.lando.cli
            apple-team-id: FY8GAUX282
            apple-notary-user: APPLE_NOTARY_USER
            apple-notary-password: APPLE_NOTARY_PASSWORD
            options: --options runtime --entitlements entitlements.xml
            result: lando-macos-x64-snapshot-${{ github.sha }}
          - os: macos-12
            key: cli-node18-macos-arm64-${{ github.sha }}
            file: lando/cli
            certificate-data: APPLE_CERT_DATA
            certificate-password: APPLE_CERT_PASSWORD
            apple-product-id: dev.lando.cli
            apple-team-id: FY8GAUX282
            apple-notary-user: APPLE_NOTARY_USER
            apple-notary-password: APPLE_NOTARY_PASSWORD
            options: --options runtime --entitlements entitlements.xml
            result: lando-macos-arm64-snapshot-${{ github.sha }}
          - os: ubuntu-20.04
            key: cli-node18-linux-x64-${{ github.sha }}
            file: lando/cli
            result: lando-linux-x64-snapshot-${{ github.sha }}
          - os: ubuntu-20.04
            key: cli-node18-linux-arm64-${{ github.sha }}
            file: lando/cli
            result: lando-linux-arm64-snapshot-${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download ${{ matrix.key }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.key }}
          path: lando
      - name: Sign and Notarize
        uses: lando/code-sign-action@v2
        id: code-sign-action
        with:
          file: ${{ matrix.file }}
          certificate-data: ${{ secrets[matrix.certificate-data] }}
          certificate-password: ${{ secrets[matrix.certificate-password] }}
          apple-notary-user: ${{ secrets[matrix.apple-notary-user] }}
          apple-notary-password: ${{ secrets[matrix.apple-notary-password] }}
          apple-product-id: ${{ matrix.apple-product-id }}
          apple-team-id: ${{ matrix.apple-team-id }}
          options: ${{ matrix.options }}
      - name: Rename as needed
        shell: bash
        run: |
          chmod +x ${{ steps.code-sign-action.outputs.file }}
          mv ${{ steps.code-sign-action.outputs.file }} ${{ matrix.result }}
      - name: Upload snapshot release ${{ matrix.result }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.result }}
          path: ${{ matrix.result }}
          if-no-files-found: error
          retention-days: 1

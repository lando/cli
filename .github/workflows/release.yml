name: Create Releases

on:
  release:
    types:
      - published

jobs:
  package:
    runs-on: ${{ matrix.runner }}
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        runner:
          - macos-14
          - ubuntu-22.04
        node-version:
          - '18'
        os:
          - linux
          - macos
          - win

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile --production
      - name: Install plugins
        run: scripts/fatcore-install.sh
      - name: Prepare Release
        uses: lando/prepare-release-action@v3
        with:
          sync: false
      - name: Ensure version
        run: node ./bin/lando version
      - name: Ensure plugins installed
        run:  node ./bin/lando config | grep -q "node_modules/@lando/wordpress"
      - name: Package into node binary
        uses: lando/pkg-action@v5
        with:
          entrypoint: bin/lando
          node-version: ${{ matrix.node-version }}
          os: ${{ matrix.os }}
          options: --options dns-result-order=ipv4first
      - name: Ensure fatcore
        if: matrix.os == 'linux' && runner.os == 'Linux' && runner.arch == 'X64'
        run: ./dist/@lando/cli config --path fatcore | grep true
      - name: Ensure ipv4first
        if: matrix.os == 'linux' && runner.os == 'Linux' && runner.arch == 'X64'
        run: ./dist/@lando/cli config --path cli.args | grep dns-result-order=ipv4first

  sign-n-deploy:
    runs-on: ${{ matrix.os }}
    needs:
      - package
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            key: cli-node18-win-x64-${{ github.sha }}
            file: lando/cli.exe
            certificate-data: KEYLOCKER_CLIENT_CERT
            certificate-password: KEYLOCKER_CLIENT_CERT_PASSWORD
            result: lando-win-x64-${{ github.ref_name }}.exe
          - os: windows-2022
            key: cli-node18-win-arm64-${{ github.sha }}
            file: lando/cli.exe
            certificate-data: KEYLOCKER_CLIENT_CERT
            certificate-password: KEYLOCKER_CLIENT_CERT_PASSWORD
            result: lando-win-arm64-${{ github.ref_name }}.exe
          - os: macos-13
            key: cli-node18-macos-x64-${{ github.sha }}
            file: lando/cli
            certificate-data: APPLE_CERT_DATA
            certificate-password: APPLE_CERT_PASSWORD
            apple-product-id: dev.lando.cli
            apple-team-id: FY8GAUX282
            apple-notary-user: APPLE_NOTARY_USER
            apple-notary-password: APPLE_NOTARY_PASSWORD
            options: --options runtime --entitlements entitlements.xml
            result: lando-macos-x64-${{ github.ref_name }}
          - os: macos-13
            key: cli-node18-macos-arm64-${{ github.sha }}
            file: lando/cli
            certificate-data: APPLE_CERT_DATA
            certificate-password: APPLE_CERT_PASSWORD
            apple-product-id: dev.lando.cli
            apple-team-id: FY8GAUX282
            apple-notary-user: APPLE_NOTARY_USER
            apple-notary-password: APPLE_NOTARY_PASSWORD
            options: --options runtime --entitlements entitlements.xml
            result: lando-macos-arm64-${{ github.ref_name }}
          - os: ubuntu-22.04
            key: cli-node18-linux-x64-${{ github.sha }}
            file: lando/cli
            certificate-data: KEYLOCKER_CLIENT_CERT
            certificate-password: KEYLOCKER_CLIENT_CERT_PASSWORD
            result: lando-linux-x64-${{ github.ref_name }}
          - os: ubuntu-22.04
            key: cli-node18-linux-arm64-${{ github.sha }}
            file: lando/cli
            certificate-data: KEYLOCKER_CLIENT_CERT
            certificate-password: KEYLOCKER_CLIENT_CERT_PASSWORD
            result: lando-linux-arm64-${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download ${{ matrix.key }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.key }}
          path: lando
      - name: Sign and Notarize
        uses: lando/code-sign-action@v2
        id: code-sign-action
        with:
          file: ${{ matrix.file }}
          certificate-data: ${{ secrets[matrix.certificate-data] }}
          certificate-password: ${{ secrets[matrix.certificate-password] }}
          apple-notary-user: ${{ secrets[matrix.apple-notary-user] }}
          apple-notary-password: ${{ secrets[matrix.apple-notary-password] }}
          apple-product-id: ${{ matrix.apple-product-id }}
          apple-team-id: ${{ matrix.apple-team-id }}
          keylocker-host: https://clientauth.one.digicert.com
          keylocker-api-key: ${{ secrets.KEYLOCKER_API_KEY }}
          keylocker-cert-sha1-hash: ${{ secrets.KEYLOCKER_CERT_SHA1_HASH }}
          keylocker-keypair-alias: ${{ secrets.KEYLOCKER_KEYPAIR_ALIAS }}
          options: ${{ matrix.options }}
      - name: Rename as needed
        shell: bash
        run: |
          mkdir -p releases
          cp ${{ steps.code-sign-action.outputs.file }} releases/${{ matrix.result }}

          # if a latest release then push to stable tag
          if [ "${{ github.event.release.prerelease }}" ==  "false" ]; then
            cp releases/${{ matrix.result }} "releases/$(echo ${{ matrix.result }} | sed 's/${{ github.ref_name }}/stable/;')"
          fi

          # both latest/stable should push to edge
          cp releases/${{ matrix.result }} "releases/$(echo ${{ matrix.result }} | sed 's/${{ github.ref_name }}/edge/;')"

      - name: Configure S3 Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload releases to S3
        shell: bash
        run: aws s3 sync releases s3://files.lando.dev/cli
      - name: Upload releases to GitHub Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: releases/${{ matrix.result }}
          fail_on_unmatched_files: true

  # we run this again at the end and sync here so that we only sync when a build and deploy succeedes
  bump:
    runs-on: ${{ matrix.os }}
    needs:
      - sign-n-deploy
    env:
      TERM: xterm
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        node-version:
          - '18'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile --production
      - name: Update release helpers
        shell: bash
        run: |
          if [[ ${{ github.event.release.tag_name }} == v4* ]]; then
            echo "${{ github.event.release.tag_name }}" > release-aliases/4-EDGE
            if [ "${{ github.event.release.prerelease }}" == "false" ]; then
              echo "${{ github.event.release.tag_name }}" > release-aliases/4-STABLE
            fi
          elif [[ ${{ github.event.release.tag_name }} == v3* ]]; then
            echo "${{ github.event.release.tag_name }}" > release-aliases/3-EDGE
            if [ "${{ github.event.release.prerelease }}" == "false" ]; then
              echo "${{ github.event.release.tag_name }}" > release-aliases/3-STABLE
            fi
          fi

      - name: Export formatted release date
        run: echo "RELEASE_DATE=$(date -d "${{ github.event.release.published_at }}" "+%B %e, %Y" | tr -s ' ')" >> $GITHUB_ENV
      - name: Prepare Release
        uses: lando/prepare-release-action@v3
        with:
          update-files: CHANGELOG.md
          update-files-header: |
            ## {{ UNRELEASED_VERSION }} - [{{ UNRELEASED_DATE }}]({{ UNRELEASED_LINK }})
          update-files-meta: |
            UNRELEASED_DATE=${{ env.RELEASE_DATE }}
            UNRELEASED_LINK=${{ github.event.release.html_url }}
            UNRELEASED_VERSION=${{ github.event.release.tag_name }}
          sync-email: rtfm47@lando.dev
          sync-token: ${{ secrets.RTFM47_COAXIUM_INJECTOR }}
          sync-username: rtfm-47
      - name: Ensure version
        run: node ./bin/lando version
      - name: Push release to lando/lando
        uses: softprops/action-gh-release@v2
        with:
          repository: lando/lando
          name: ${{ github.event.release.tag_name }}
          draft: ${{ github.event.release.draft }}
          prerelease: ${{ github.event.release.prerelease }}
          tag_name: ${{ github.event.release.tag_name }}
          token: ${{ secrets.RTFM47_COAXIUM_INJECTOR }}
          body: |
            **Starting with 3.21.0-beta.18 Lando is no longer distributed via package installers in these releases**

            To install Lando please visit the [official install docs](https://docs.lando.dev/install).

            ## Changelogs

            Lando now runs as a distributed plugin-based ecosystem so you will want to check the releases/changelogs in
            the various repos for relevant notes. That said here are links to the changes reflected in this release

            * [@lando/core@${{ github.event.release.tag_name }}](https://github.com/lando/core/releases/tag/${{ github.event.release.tag_name }})
            * [@lando/cli@${{ github.event.release.tag_name }}](https://github.com/lando/cli/releases/tag/${{ github.event.release.tag_name }})

            ## Notes

            * We will continue to push releases here for backwards compatibility, posterity, etc
            * [Extended release notes](https://lando.dev/blog/2024/01/16/v321-extended.html)
